// Needed because github switched the default branch name to "main" from "master" and there is a hardcoded bug in nextflow
manifest.defaultBranch = 'main'

// Default all process(es) to use the parallel environment 'serial'
process.penv = "serial"

// Default pipeline mode (change to 'test' in yaml file if doing a test mode run)
params.mode = 'production'

// Default strip kinetics to true as that is what is usually wanted for pacbio map/merges
params.stripKinetics = true

// Input
params.mergedBam = null
params.hifiBams = null
params.ontFastqsFolder = null
params.ontBamsFolder = null
params.ontDataFolder = null
params.ontBaseCall = false
params.ontBaseCallModel = null
params.ontBaseCallBaseModifications = null
params.ontBaseCallOutFolder = null
params.ontSignalFolders = null
params.ontCudaDevice = 'cuda:all'
params.signalExtensions = 'fast5'
params.basecaller_num_chunk_per_batch = 20
params.basecall_qscore_filter = 10

// QC
params.qcToRun = ["All"]


process {
  debug = false
}

profiles {
	
	instanceSizeLow {
		process {
			withName: 'STRIP_KINETICS' {
				memory = "1G"
				cpus = 1
			}
			
			withName: 'MAP_HIFI_BAM' {
				memory = "2G"
				cpus = 1
			}

			withName: 'MAP_ONT_FASTQ' {
				memory = "2G"
				cpus = 1
			}

			withName: 'MAP_ONT_BAM' {
				memory = "2G"
				cpus = 1
			}

			withName: 'MERGE_MAPPED_BAMS' {
				memory = "2G"
				cpus = 1
			}

			withName: 'ADD_NM_TAGS' {
				memory = "2G"
				cpus = 1
			}
			
			withName: 'SAMTOOLS_STATS' {
				memory = "2G"
				cpus = 1
			}
			
			withName: 'PICARD_QUALITY_METRICS' {
				memory = "2G"
			}
			
			withName: 'PICARD_COVERAGE_METRICS' {
				memory = "2G"
			}
			
			withName: 'NANO_PLOT' {
				memory = "2G"
				cpus = 1
			}
			
			withName: 'CONTAMINATION_CHECK' {
				memory = "2G"
			}
			
			withName: 'CREATE_FINGERPRINT_VCF' {
				memory = "2G"
			}
		}
	}

	instanceSizeHigh {
		process {
			withName: 'CONVERT_FAST5_TO_POD5' {
				memory = "2G"
				cpus = 2
			}
			withName: 'BASECALL_ONLY_DORADO' {
				memory = "4G"
				cpus = 8
			}

			withName: 'SUMMARIZE_DORADO' {
				memory = "2G"
				cpus = 2
			}

			withName: 'COLLATE_DORADO_SUMMARIES' {
				memory = "2G"
				cpus = 2
			}

			withName: 'QSFILTER' {
				memory = "2G"
				cpus = 4
			}

			withName: 'STRIP_KINETICS' {
				memory = "1G"
				cpus = 20
			}
		
			withName: 'MAP_HIFI_BAM' {
				memory = "2G"
				cpus = 16
			}

			withName: 'MAP_ONT_FASTQ' {
				memory = "3G"
				cpus = 8
			}

			withName: 'MAP_ONT_BAM' {
				memory = "3G"
				cpus = 8
			}

			withName: 'MERGE_MAPPED_BAMS' {
				memory = "2G"
				cpus = 16
			}

			withName: 'ADD_NM_TAGS' {
				memory = "2G"
				cpus = 16
			}
			
			withName: 'SAMTOOLS_STATS' {
				memory = "2G"
				cpus = 10
			}
			
			withName: 'PICARD_QUALITY_METRICS' {
				memory = "10G"
			}
			
			withName: 'PICARD_COVERAGE_METRICS' {
				memory = "30G"
			}
			
			withName: 'NANO_PLOT' {
				memory = "2G"
				cpus = 10
			}
			
			withName: 'CONTAMINATION_CHECK' {
				memory = "10G"
			}
			
			withName: 'CREATE_FINGERPRINT_VCF' {
				memory = "10G"
			}

			withName: 'PUBLISH_RELEASE_QC_ROOT' {
				memory = "2G"
				cpus = 1
			}

			withName: 'PUBLISH_RELEASE_QC_NANAPLOT' {
				memory = "2G"
				cpus = 1
			}

			withName: 'PUBLISH_RELEASE' {
				memory = "2G"
				cpus = 1
			}

			withName: 'PUBLISH_RELEASE_QC' {
				memory = "2G"
				cpus = 1
			}

			withName: 'CHECKSUM_BAM' {
				memory = "2G"
				cpus = 1
			}
		}
	}

	executorLocal {
		// Executor
		executor.name = 'local'
	}

	executorGridEngine {
		// Executor
		executor.name = 'sge'
		executor.jobName = { "${task.label[0]}" + "_" + "${task.index}" }

		// Grid Engine
		clusterProject = "dna"
		defaultClusterOptions = "-S /bin/bash -P $clusterProject -m as -r yes -R yes";
		//defaultClusterOptions = "-S /bin/bash -q analysis.q -m as -r yes -R yes";

		process {
			// Default cluster options with 1 hour run time for all processes
			clusterOptions = "$defaultClusterOptions -l d_rt=0:1:0"

			withName: 'CONVERT_FAST5_TO_POD5' {
				clusterOptions = "$defaultClusterOptions -l d_rt=0:2:0"
			}
			withName: 'BASECALL_ONLY_DORADO' {
				clusterOptions = "$defaultClusterOptions -l d_rt=0:3:0,gpgpu=TRUE,cuda=1"
			}

			// Processes that have a different projected run time than the default
			withName: 'MAP_HIFI_BAM' {
				clusterOptions = "$defaultClusterOptions -l d_rt=0:2:0"
			}
			
			withName: 'MAP_ONT_FASTQ' {
				clusterOptions = "$defaultClusterOptions -l d_rt=0:2:0"
			}

			withName: 'PICARD_COVERAGE_METRICS' {
				clusterOptions = "$defaultClusterOptions -l d_rt=0:3:0"
			}			
		}
	}

	environmentModule {

		//  Modules
		initModules = "modules:modules-init:modules-gs"
		smrttoolsModule = params.sequencerType == 'Revio' ? 'smrttools/12.0.0' : 'smrttools/11.0.0'
		minimap2Module = "minimap2/2.26"
		samtoolsModule = "samtools/1.14"
		picardModule = "picard/3.0.0"
		pythonModule = "python/3.7.7"
		nanoPlotModule = "nanoplot/1.41.0"
		htslibModule = "htslib/1.16.2"
		verifyBamIdModule =  "VerifyBamID/2.0.1"
		bcftoolsModule = "bcftools/1.17"
		tabixModule = "tabix/0.2.6"
		cudaModule = "cuda/12.1"
		doradoModule = "dorado/0.4.2"
		doraodoModelsModule = "dorado-data/models"
		pythonForPod5Module = "python/3.9.13"
		numpyModule = "numpy/1.26.2"
		h5pyModule = "h5py/3.8.0"
		pod5Module = "pod5/0.3.0"
		ontsamtoolsModule = "samtools/1.17"

		process {
			withName: 'CONVERT_FAST5_TO_POD5' {
				module = "${initModules}:${pythonForPod5Module}:${numpyModule}:${h5pyModule}:${pod5Module}"
			}
			withName: 'BASECALL_ONLY_DORADO' {
				module = "${initModules}:${cudaModule}:${doradoModule}:${doraodoModelsModule}"
			}

			withName: 'SUMMARIZE_DORADO' {
				module = "${initModules}:${doradoModule}"
			}

			withName: 'COLLATE_DORADO_SUMMARIES' {
				module = "${initModules}"
			}

			withName: 'QSFILTER' {
				module = "${initModules}:${ontsamtoolsModule}"
			}

			withName: 'STRIP_KINETICS' {
				module = "${initModules}:${smrttoolsModule}:${samtoolsModule}"
			}
			
			withName: 'MAP_HIFI_BAM' {
				module = "${initModules}:${smrttoolsModule}"
			}

			withName: 'MAP_ONT_FASTQ' {
				module = "${initModules}:${minimap2Module}:${ontsamtoolsModule}"
			}

			withName: 'MAP_ONT_BAM' {
				module = "${initModules}:${minimap2Module}:${ontsamtoolsModule}"
			}

			withName: 'MERGE_MAPPED_BAMS' {
				module = "${initModules}:${samtoolsModule}"
			}

			withName: 'ADD_NM_TAGS' {
				module = "${initModules}:${samtoolsModule}"
			}
			
			withName: 'SAMTOOLS_STATS' {
				module = "${initModules}:${samtoolsModule}"
			}
			
			withName: 'PICARD_QUALITY_METRICS' {
				module = "${initModules}:${picardModule}"
			}
			
			withName: 'PICARD_COVERAGE_METRICS' {
				module = "${initModules}:${picardModule}"
			}
			
			withName: 'NANO_PLOT' {
				module = "${initModules}:${pythonModule}:${nanoPlotModule}"
			}
			
			withName: 'CONTAMINATION_CHECK' {
				module = "${initModules}:${samtoolsModule}:${htslibModule}:${verifyBamIdModule}"
			}
			
			withName: 'CREATE_FINGERPRINT_VCF' {
				module = "${initModules}:${htslibModule}:${bcftoolsModule}:${tabixModule}"
			}
		}
	}

	environmentContainer {
		process {
			withName: 'MAP_HIFI_BAM' {
				container = "someContainerPath"
			}
		}
	}
}

// performance monitoring
timeline {
  enabled = true
  file = "./monitor/${params.sampleId}.timeline.html"
  overwrite = true
}
report {
  enabled = true
  file = "./monitor/${params.sampleId}.report.html"
  overwrite = true
}
trace {
  enabled = true
  file = "./monitor/${params.sampleId}.trace.txt"
  overwrite = true
}
